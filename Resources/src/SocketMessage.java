/*
 * Copyright (c) 2014. This code is a LogosProg property. All Rights Reserved.
 */

import java.io.Serializable;
import java.util.Date;

/**
 * Created by forando on 26.08.14.
 * Struct object just used for communcation -- sent on the object stream.<br>
 * The contained int and Date objects are both Serializable, otherwise
 * the serialization would fail.
 */
public class SocketMessage implements Serializable {
    public final static int REGISTER_SOCKET = 0;
    public final static int CLOSE_TERMINAL = 1;
    public final static int REQUEST_CLIENT = 2;
    public final static int ACCEPT_CLIENT = 3;

    /**
     * Defines whether terminal is allowed to request a new client.<br>
     * if {@link #value} = 0 - it's allowed, if {@link #value} = 1 - it's not
     */
    public final static int HOLD_TERMINAL = 4;


    //The types of clients:
    public static final int PRINTER = 0;
    public static final int TERMINAL = 1;
    public static final int DISPLAY = 2;

    public int terminal;
    /**
     * A command type to be committed.<br>
     *     can be:
     *     <ul>
     *         <li>{@link #REGISTER_SOCKET}</li>
     *         <li>{@link #CLOSE_TERMINAL}</li>
     *         <li>{@link #REQUEST_CLIENT}</li>
     *         <li>{@link #ACCEPT_CLIENT}</li>
     *         <li>{@link #HOLD_TERMINAL}</li>
     *     </ul>
     */
    public int operation;
    /**
     * A value for the {@link #operation} to be provided.
     */
    public int value;
    public boolean received;
    /**
     * Means has this object been generated by client and than transferred through socket,
     * or it's been generated locally on the server side on a basis of ByteArray that was
     * received from a client.
     */
    public boolean transferable;
    public Date date;

    /**
     *
     * @param terminal The terminal index
     * @param operation The command to be executed
     * @param value The operation value
     * @param date Current time stamp
     * @param transferable See {@link #transferable}
     */
    public SocketMessage(int terminal, int operation, int value, Date date, boolean transferable) {
        this.terminal = terminal;
        this.operation = operation;
        this.value = value;
        this.received = false;
        this.date = date;
        this.transferable = transferable;
    }
}
